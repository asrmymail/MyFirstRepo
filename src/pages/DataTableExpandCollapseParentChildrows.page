<apex:page controller="JsonJQuery_PracticePage6Controller" docType="HTML-5.0">
<!--<script type="text/javascript" language="javascript" src="{!URLFOR($Resource.jQueryDataTablesZip, 'jQueryDataTablesZip/js/jquery.js')}"></script>
<script type="text/javascript" language="javascript" src="{!URLFOR($Resource.jQueryDataTablesZip, 'jQueryDataTablesZip/js/jquery.dataTables.js')}"></script>-->
<apex:includeScript value="{!URLFOR($Resource.jQueryDataTablesZip, 'jQueryDataTablesZip/js/jquery.js')}"/>
<apex:includeScript value="{!URLFOR($Resource.jQueryDataTablesZip, 'jQueryDataTablesZip/js/jquery.dataTables.js')}"/>
<apex:stylesheet value="{!URLFOR($Resource.jQueryDataTablesZip, 'jQueryDataTablesZip/css/jquery.dataTables.css')}"/>

<style>
    td.details-control {
        background: url({!URLFOR($Resource.jQueryDataTablesZip,'jQueryDataTablesZip/images/details_open.png')}) no-repeat center center;
        cursor: pointer;
    }
    tr.shown td.details-control {
        background: url({!URLFOR($Resource.jQueryDataTablesZip,'jQueryDataTablesZip/images/details_close.png')}) no-repeat center center;
    }
    </style>
    
    
    <!---START Here-----Login Executed in Script----------->
    <script>
   
    Visualforce.remoting.timeout = 120000; 
        j$ = jQuery.noConflict();
        j$(document).ready( readyFn  );
        function readyFn() {
            var acctTable = j$("[id$='parentTable']").DataTable( {
            "ajax": function(data, callback, settings){
                // Use the Remote Object retrieve method to get a list of accounts
                //GE_PW_OrderTrackingPartnersNew_Test.
                var legacy = j$("[id$='legacynum']").val();
                var toDt = j$("[id$='todt']").val();
                 var frmDt = j$("[id$='fromdt']").val();
                JsonJQuery_PracticePage6Controller.parentRecords(legacy, toDt, frmDt, function(result, event){
                        if (event.status){
                        
                            callback({"data": result});}
                            else
                            {
                            
                            }
                        
                    });
                   
                },
                "sPaginationType": "full_numbers",
                 "ordering": true,
                "info":     true,
                // Specify our columns. The first column is used to control expanding and collapsing to see Child Records.
                "drawCallback": function( settings ) { },
                    "columns": [
                        {   "class": 'details-control',
                            "orderable": false,
                            "data": null,
                            "defaultContent": '',
                         width: "8%" 
                        },
                        { "data": "Name","defaultContent": ''  },
                        { "data": "Phone","defaultContent": '' },
                        { "data": "Type","defaultContent": ''  },
                        { "data": "Fax","defaultContent": ''  },
                        { "data": "NumberOfEmployees ","defaultContent": ''  },
                        { "data": "CreatedDate", "type": "date", "render": function (d) {
                            var dt = "\/Date("+d+")\/";
                            var dateString = dt.substr(6);
                            var currentTime = new Date(parseInt(dateString ));
                            var month = currentTime.getMonth() + 1;
                            var day = currentTime.getDate();
                            var year = currentTime.getFullYear();
                            var date = month + "/" + day + "/" + year;
                            return date ;
                        }}
                    ]
                    });
            
            // This is used to watch for clicks to expand and collapse the rows.
            j$("#parentTable tbody").on('click', 'td.details-control', function () {
           
                var tr = j$(this).closest('tr');
                var row = acctTable.row( tr );
          
                if ( row.child.isShown() ) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
               
                    // Open this row
                    formatChilds(row.data(), function(childData) {
                        row.child( childData ).show();
                        tr.addClass('shown');
                    });
                }
            } );

            j$("[id$='clickHere']").click(function(){
            acctTable.ajax.reload();
            });
            // Each time a row is clicked to expand, we need to query for a list of contacts for that account and 
            // build a table that will display as a child to the row
            function formatChilds(d, callback) {
                
               JsonJQuery_PracticePage6Controller.childRecords( d['Id'], function(result, event){
                    
                  if (event.status){
                        var table = '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">'+
                                        '<thead><tr><th>FirstName</th><th>LastName</th><th>Phone</th><th>Status</th></tr></thead><tbody>';            

                        for(var i= 0 ; i< result.length; i++)
                        {
                        
                          
                            table = table + '<tr><td>' + checkVal(result[i]['FirstName']) + '</td><td>' + checkVal(result[i]['LastName']) + '</td><td>' + checkVal(result[i]['LastName'] )+  '</td><td>' + checkVal(result[i]['Phone']) + '</td><td>' + checkDate(result[i]['gew_new_planned_date__c']) + '</td><td>' + checkDate(result[i]['gew_planned_ship_date__c']) + '</td></tr>';
                        };
                        table = table + '</tbody></table>';
                        callback(table);
                        
                        }
                    
                });
            }
            
            function checkVal(d)
            {
                if(d != undefined && d != 'undefined')
                return d;
                else return '';
            }
            function checkDate(d)
            {
                if(d != undefined && d != 'undefined')
                {
                    var dt = "\/Date("+d+")\/";
                    var dateString = dt.substr(6);
                    var currentTime = new Date(parseInt(dateString ));
                    var month = currentTime.getMonth() + 1;
                    var day = currentTime.getDate();
                    var year = currentTime.getFullYear();
                    var date = month + "/" + day + "/" + year;
                    return date ;
                }
                else return '';
            }
        }
        
    </script>
    <apex:form >
    <body>
    <apex:pageBlock >
    <apex:pageMessages id="errors" />
    <apex:pageBlockButtons location="top">
    <!--<input type="button" id="clickHere" value="Search for Records"   style="background-color:lightBlue;background-image:none;;float:center;"/>  -->
        <apex:commandButton id="clickHere" value="Search for Records"  reRender="errors" status="actStatusId" style="background-color:lightBlue;background-image:none;;float:center;"/> 
        <apex:actionStatus id="actStatusId">
            <apex:facet name="start">
        <div class="waitingSearchDiv" id="el_loading" style="background-color: #fbfbfb; height:100%;opacity:0.65;width:100%;">
            <div class="waitingHolder" style="top: 100px; width: 91px;">
            <img class="waitingImage" src="/img/loading.gif" title="Please Wait..." />
            <span class="waitingDescription">Loading...</span>
            </div>
        </div>
    </apex:facet>
        </apex:actionStatus>  
    </apex:pageBlockButtons>
    <apex:pageBlockSection id="pgsec" >
        <apex:input value="{!LegacyNo}"  label="SAP ID" id="legacynum" type="text"/>
        
        <br/>
        <apex:input value="{!fromDate}"  label="From Date" id="todt" type="date"/>
        <apex:input value="{!toDate}" label="To Date" id="fromdt" type="date"/>
    </apex:pageBlockSection>
  </apex:pageBlock>
  <apex:pageBlock title="List Result {!ListOfAccounts.size}" id="do" >
    <table id="parentTable" class="display" cellspacing="0" width="100%">
        <thead>
            <tr>
                <th/>
                <th>Account Name</th>
                <th>Phone</th>
                <th>Email</th>
                <th>Owner</th>
                <th>Open</th>
                <th>Shipped</th>

            </tr>
        </thead>
     </table>
     </apex:pageBlock>
     </body>  
   </apex:form>
</apex:page>